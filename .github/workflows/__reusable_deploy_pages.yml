name: __Reusable to deploy to GH pages

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      # LANGUAGE_CODE: "en" or "de"
      LANGUAGE_CODE:
        required: true
        type: string
      # SOURCE_REPO_REF: refs/tags/v*
      SOURCE_REPO_REF:
        required: true
        type: string
    secrets:
      PRIVATE_REPO_PAT:
        required: true


jobs:
  build:
    name: Build Pages Site
    runs-on: ${{ inputs.runner }}

    steps:
      - name: Abort if reference is not a version tag
        if: ${{ !startsWith(inputs.SOURCE_REPO_REF, 'refs/tags/v') }}
        run: |
          echo "The selected git ref=${{ inputs.SOURCE_REPO_REF }} is NOT a valid release tag. Please select a valid release TAG as reference."
          exit 1

      - name: Confirm valid version tag
        run: |
          echo "The selected git ref=${{ inputs.SOURCE_REPO_REF }} is a valid release tag."
          echo "SOURCE_REPO_REF=${{ inputs.SOURCE_REPO_REF }}" >> $GITHUB_ENV

      - name: Initialize Environment
        run: |
          echo "SOURCE_REPO=MHPH/cv.paul-hoffrogge.de" >> $GITHUB_ENV
          echo "SOURCE_DIR=sources" >> $GITHUB_ENV
          echo "SITE_DIR=_site" >> $GITHUB_ENV
          echo "VERSION_TAG=${SOURCE_REPO_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "LANGUAGE_CODE=${{ inputs.LANGUAGE_CODE }}" >> $GITHUB_ENV

      - name: Log Environment
        run: |
          echo "  SOURCE_REPO:     ${SOURCE_REPO}"
          echo "  SOURCE_REPO_REF: ${SOURCE_REPO_REF}"
          echo "  SOURCE_DIR:      ${SOURCE_DIR}"
          echo "  SITE_DIR:        ${SITE_DIR}"
          echo "  VERSION_TAG:     ${VERSION_TAG}"
          echo "  LANGUAGE_CODE:   ${LANGUAGE_CODE}"

      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          # clone https://github.com/MHPH/cv.paul-hoffrogge.de
          repository: ${{ env.SOURCE_REPO }}
          path: ${{ env.SOURCE_DIR }}
          ref:  ${{ env.SOURCE_REPO_REF }}
          # !!! We need a dedicated PAT (PersonalAccessToken) to access the other repo
          token: ${{ secrets.PRIVATE_REPO_PAT }}

      - name: Build site content
        run: |
          mkdir -p ./${{ env.SITE_DIR }}
          cp --verbose -R ${{ env.SOURCE_DIR }}/HTML/Paul/* ${{ env.SITE_DIR }}
          mv -v ${{ env.SITE_DIR }}/lang/${{ env.LANGUAGE_CODE }}/* ${{ env.SITE_DIR }}
          # Remove files not to publish
          # Note: The xargs variant will endup with "rm: missing operand" if there is no file or dir found matching
          #find ./${{ env.SITE_DIR }} -type f -name 'index-*.html' -print0 | xargs -0 rm -v
          find ./${{ env.SITE_DIR }} -type f -name 'index-*.html' -exec rm -v {} \;
          find ./${{ env.SITE_DIR }} -type f -name 'blog*.html' -exec rm -v {} \;
          find ./${{ env.SITE_DIR }} -type f -name '*.php' -exec rm -v {} \;
          find ./${{ env.SITE_DIR }} -type f -name '.*' -exec rm -v {} \;
          find ./${{ env.SITE_DIR }} -type d -name 'demo' -exec rm -vrf {} +
          find ./${{ env.SITE_DIR }} -type d -name 'php' -exec rm -vrf {} +
          find ./${{ env.SITE_DIR }} -type d -name 'lang' -exec rm -vrf {} +
          # Create site manifest:
          echo "Origin:    ${{ github.repository }}" > ./${{ env.SITE_DIR }}/MANIFEST.txt
          echo "Buildtime: $(date --rfc-3339=seconds)" >> ./${{ env.SITE_DIR }}/MANIFEST.txt
          echo "Version:   ${{ env.VERSION_TAG }}" >> ./${{ env.SITE_DIR }}/MANIFEST.txt
          echo "Language:  ${{ env.LANGUAGE_CODE }}" >> ./${{ env.SITE_DIR }}/MANIFEST.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Upload Pages site content
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire site built
          path: './${{ env.SITE_DIR }}'

  # Deployment job
  deploy:
    name: Deploy Pages Site
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ${{ inputs.runner }}
    needs: [build]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
